{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-a6aae36538500c54e3680568b92fcad288848bc35d5301216544e0bc1483c3a051bc3d2113cc86f71cc571ca722b835561af98a52286a28723f0124515179944",
            "file": "src/app/store/reducers/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    ActionReducerMap,\r\n    MetaReducer\r\n  } from \"@ngrx/store\";\r\n  import { environment } from \"../../../environments/environment\";\r\n  \r\n  export interface AppState {}\r\n  \r\n  export const reducers: ActionReducerMap<AppState> = {};\r\n  \r\n  export const metaReducers: MetaReducer<AppState>[] = !environment.production\r\n    ? []\r\n    : [];\r\n  ",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Character",
            "id": "interface-Character-d1e8bbc1d90e1fa975de4711393d5310a2838f0032312f37daec5167dfe797be4b3d0386b40f71cfaf15aa50d277136ab0410a8d540687b1ae6a993ca1969b64",
            "file": "src/app/models/character.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Parent {\r\n    id: number;\r\n    name: string;\r\n    gender: string;\r\n}\r\n\r\nexport interface Character {\r\n    id: number;\r\n    characterName: string;\r\n    gender: string;\r\n    dateOfBirth: string;\r\n    dateOfDeath: string;\r\n    fatherId: number;\r\n    motherId: number;\r\n    children: Character[];\r\n    fatherAgeAtBirth: number | null;\r\n    fatherContinuedToLive: number | null;\r\n    reference: string;\r\n    description: string;\r\n}\r\n\r\nexport type CharacterGenderList = Omit<Character, 'gender' | 'children' | 'dateOfBirth' | 'dateOfDeath' | 'fatherId' | 'motherId' | 'fatherAgeAtBirth' | 'fatherContinuedToLive' | 'reference' | 'description'>;\r\n\r\nexport interface Family extends Character {\r\n    father: Parent;\r\n    mother: Parent;\r\n}",
            "properties": [
                {
                    "name": "characterName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "dateOfBirth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "dateOfDeath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "fatherAgeAtBirth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "fatherContinuedToLive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fatherId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "motherId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "reference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CharacterState",
            "id": "interface-CharacterState-bdcee139cfe9a8bc90ed526f95a7bacfc98db4a0bc7d01f9f03d067bd27baff493adc2636793157cdde36feab9eb5ca8458b792ef7ae72ff1e8f40882555597e",
            "file": "src/app/views/characters/store/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, MetaReducer, on } from '@ngrx/store';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\nimport { Character, CharacterGenderList, Family } from 'src/app/models/character.model';\nimport { environment } from '../../../../environments/environment';\nimport * as fromCharacterActions from './character.actions';\n\nexport const characterStateFeatureKey = 'characterState';\n\nexport interface CharacterState {\n  characters: Character[];\n  character: Family;\n  mothers: CharacterGenderList[];\n  fathers: CharacterGenderList[];\n  characterTree: Character[];\n  error?: any;\n}\n\nexport const initialState: CharacterState = {\n  characters: [],\n  character: {\n    id: 0,\n    characterName: '',\n    gender: '',\n    dateOfBirth: '',\n    dateOfDeath:'',\n    fatherId: 0,\n    motherId: 0,\n    father: {\n        id: 0,\n        name: '',\n        gender: 'M'\n    },\n    mother: {\n        id: 0,\n        name: '',\n        gender: 'F'\n    },\n    children: [],\n    fatherAgeAtBirth: null,\n    fatherContinuedToLive: null,\n    reference: '',\n    description: ''\n  },\n  mothers: [],\n  fathers: [],\n  characterTree: [],\n  error: undefined\n};\n\n\nexport const reducers = createReducer(\n  initialState,\n  on(fromCharacterActions.loadCharacterSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: action.character\n    }\n  }),\n  on(fromCharacterActions.loadCharactersSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadCharactersFailure, (state, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadParentSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: {\n        ...state.character,\n        father: action.parent,\n        mother: action.parent\n      }\n    }\n\n  }),\n  on(fromCharacterActions.loadParentFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadMotherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      mothers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadMotherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadFatherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      fathers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadFatherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.createCharacterSuccess, (state: CharacterState, action) => {\n    console.log('createCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.createCharacterFailure, (state: CharacterState, action) => {\n    console.log('createCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.updateCharacterSuccess, (state: CharacterState, action) => {\n    console.log('updateCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.updateCharacterFailure, (state: CharacterState, action) => {\n    console.log('updateCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterSuccess, (state: CharacterState, action) => {\n    console.log('deleteCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterFailure, (state: CharacterState, action) => {\n    console.log('deleteCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characterTree: action.characterTree\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  })\n);\n\nexport const metaReducers: MetaReducer<CharacterState>[] = !environment.production ? [] : [];\n",
            "properties": [
                {
                    "name": "character",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Family",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "characters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "characterTree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "fathers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CharacterGenderList[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "mothers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CharacterGenderList[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Family",
            "id": "interface-Family-d1e8bbc1d90e1fa975de4711393d5310a2838f0032312f37daec5167dfe797be4b3d0386b40f71cfaf15aa50d277136ab0410a8d540687b1ae6a993ca1969b64",
            "file": "src/app/models/character.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Parent {\r\n    id: number;\r\n    name: string;\r\n    gender: string;\r\n}\r\n\r\nexport interface Character {\r\n    id: number;\r\n    characterName: string;\r\n    gender: string;\r\n    dateOfBirth: string;\r\n    dateOfDeath: string;\r\n    fatherId: number;\r\n    motherId: number;\r\n    children: Character[];\r\n    fatherAgeAtBirth: number | null;\r\n    fatherContinuedToLive: number | null;\r\n    reference: string;\r\n    description: string;\r\n}\r\n\r\nexport type CharacterGenderList = Omit<Character, 'gender' | 'children' | 'dateOfBirth' | 'dateOfDeath' | 'fatherId' | 'motherId' | 'fatherAgeAtBirth' | 'fatherContinuedToLive' | 'reference' | 'description'>;\r\n\r\nexport interface Family extends Character {\r\n    father: Parent;\r\n    mother: Parent;\r\n}",
            "properties": [
                {
                    "name": "father",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Parent",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "mother",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Parent",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Character"
        },
        {
            "name": "GenderType",
            "id": "interface-GenderType-888f486e07d626c41256d352087db0ad1990c30da566b8b65af4dd7f3fc44cd137059c5d6bc94a35754fdce2d3bc749350db4a25b6b2dafc8a0ee4ac231f4bfd",
            "file": "src/app/components/forms/character-form/character-form.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Output } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Character, CharacterGenderList } from 'src/app/models/character.model';\nimport { CharacterState } from 'src/app/views/characters/store';\nimport { selectFatherList, selectMotherList } from 'src/app/views/characters/store/character.selectors';\n\ninterface GenderType {\n  value: string;\n  name: string;\n}\n@Component({\n  selector: 'app-character-form',\n  templateUrl: './character-form.component.html',\n  styleUrls: ['./character-form.component.scss']\n})\nexport class CharacterFormComponent implements OnInit {\n  registerForm: FormGroup;\n  controlsConfig = {};\n  children: Character[];\n  genderList: GenderType[];\n  submitted:boolean;\n  createUpdate: string = '';\n  fatherList$: Observable<CharacterGenderList[]>;\n  motherList$: Observable<CharacterGenderList[]>;\n\n  @Input() public configData: { [key: string]: any; };\n  @Input() public childrenData: Character[];\n  @Input() public isNew: boolean;\n  @Output() public submit = new EventEmitter<FormGroup>();\n  @Output() public reset = new EventEmitter<FormGroup>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private readonly store: Store<CharacterState>\n  ) {\n    this.genderList = [\n      {\n        value: 'M',\n        name: 'Male'\n      },\n      {\n        value: 'F',\n        name: 'Female'\n      }\n    ];\n    this.registerForm = this.formBuilder.group({\n      id: [''],\n      characterName: ['', Validators.required],\n      gender: ['', Validators.required],\n      dateOfBirth: [''],\n      dateOfDeath: [''],\n      fatherId: [''],\n      motherId: [''],\n      fatherAgeAtBirth: [''],\n      fatherContinuedToLive: [''],\n      reference: [''],\n      description: ['']\n    });\n    this.controlsConfig = {\n      id: null,\n      characterName: '',\n      gender: 'M',\n      dateOfBirth: null,\n      dateOfDeath: null,\n      fatherId: 0,\n      motherId: 0,\n      fatherAgeAtBirth: null,\n      fatherContinuedToLive: null,\n      reference: '',\n      description: ''\n    };\n    this.submitted = false;\n    this.fatherList$ = this.store.select(selectFatherList);\n    this.motherList$ = this.store.select(selectMotherList);\n  }\n\n  ngOnInit(): void {\n    this.createUpdate = this.isNew ? 'Create' : 'Update';\n    this.children = this.childrenData;\n    this.controlsConfig = {\n      id: this.configData.id,\n      characterName: this.configData.characterName,\n      gender: this.configData.gender,\n      dateOfBirth: this.configData.dateOfBirth,\n      dateOfDeath: this.configData.dateOfDeath,\n      fatherId: this.configData.fatherId,\n      motherId: this.configData.motherId,\n      fatherAgeAtBirth: this.configData.fatherAgeAtBirth,\n      fatherContinuedToLive: this.configData.fatherContinuedToLive,\n      reference: this.configData.reference,\n      description: this.configData.description\n    };\n    this.registerForm.reset(this.controlsConfig);\n    console.log('configData: ', this.configData);\n  }\n\n  get f() { return this.registerForm && this.registerForm.controls; }\n\n  onSubmit(): void {\n    console.log('CharacterFormComponent onSubmit was called...');\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.submit.emit(this.registerForm);\n  }\n\n  onReset(): void {\n    console.log('CharacterFormComponent onReset was called...');\n    this.reset.emit(this.registerForm);\n  }\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Navigation",
            "id": "interface-Navigation-870ede2481b33edc61989c09def80e5b843d959d0c45e0ea4f75303acf25bb989336736a8292130f1ecdc543d155e102d67ac2c866dba6b2c1db9042bc3c3352",
            "file": "src/app/models/navigation.model..ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Navigation {\r\n  id: number;\r\n  name: string;\r\n  url: string[];\r\n  isActive: boolean;\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Parent",
            "id": "interface-Parent-d1e8bbc1d90e1fa975de4711393d5310a2838f0032312f37daec5167dfe797be4b3d0386b40f71cfaf15aa50d277136ab0410a8d540687b1ae6a993ca1969b64",
            "file": "src/app/models/character.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Parent {\r\n    id: number;\r\n    name: string;\r\n    gender: string;\r\n}\r\n\r\nexport interface Character {\r\n    id: number;\r\n    characterName: string;\r\n    gender: string;\r\n    dateOfBirth: string;\r\n    dateOfDeath: string;\r\n    fatherId: number;\r\n    motherId: number;\r\n    children: Character[];\r\n    fatherAgeAtBirth: number | null;\r\n    fatherContinuedToLive: number | null;\r\n    reference: string;\r\n    description: string;\r\n}\r\n\r\nexport type CharacterGenderList = Omit<Character, 'gender' | 'children' | 'dateOfBirth' | 'dateOfDeath' | 'fatherId' | 'motherId' | 'fatherAgeAtBirth' | 'fatherContinuedToLive' | 'reference' | 'description'>;\r\n\r\nexport interface Family extends Character {\r\n    father: Parent;\r\n    mother: Parent;\r\n}",
            "properties": [
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CharacterEffects",
            "id": "injectable-CharacterEffects-b9121297f7f11753cf6e565db027c9c02c22e639fef11ab797d751ef000e23bf6a791592032d7e3695310ef68f98e162972d68eb28efeaf0ddc0d256587dab34",
            "file": "src/app/views/characters/store/character.effects.ts",
            "properties": [
                {
                    "name": "createCharacter$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.CREATE_CHARACTER),\n    mergeMap((character: Character) => this.characterService.createCharacter(character)\n      .pipe(\n        map(characters => fromCharacterActions.createCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.createCharacterFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "deleteCharacter$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.DELETE_CHARACTER),\n    mergeMap((data) => this.characterService.deleteCharacter(data)\n      .pipe(\n        map(characters => fromCharacterActions.deleteCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.deleteCharacterFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "loadCharacter$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTER),\n    withLatestFrom(this.store$.select(selectCharacters)),\n    mergeMap(([action, storeState]) => this.characterService.getCharacter(action, storeState)\n      .pipe(\n        map(character => fromCharacterActions.loadCharacterSuccess({character})),\n        catchError(error => of(fromCharacterActions.loadCharacterFailure({error})))\n      )\n    )\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "loadCharacters$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTERS),\n    mergeMap(() => this.characterService.getCharacters()\n      .pipe(\n          mergeMap(characters => {\n            return [\n              fromCharacterActions.loadCharactersSuccess({characters}),\n              fromCharacterActions.loadCharacterTree({characters}),\n              fromCharacterActions.loadMotherList(),\n              fromCharacterActions.loadFatherList()\n            ];\n          }),\n          catchError(error => of(fromCharacterActions.loadCharactersFailure({error})))\n      )\n    )\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "loadCharacterTree$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTER_TREE),\n    mergeMap((characters) => this.characterService.generateTree(characters, 0)\n      .pipe(\n        map(characterTree => fromCharacterActions.loadCharacterTreeSuccess({characterTree})),\n        catchError(error => of(fromCharacterActions.loadCharacterTreeFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "loadFathers$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_FATHER_LIST),\n    mergeMap(() => this.characterService.getGenderList('M')\n      .pipe(\n        map(characters => fromCharacterActions.loadFatherListSuccess({characters})),\n        catchError(error => of(fromCharacterActions.loadFatherListFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "loadMothers$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_MOTHER_LIST),\n    mergeMap(() => this.characterService.getGenderList('F')\n      .pipe(\n        map(characters => fromCharacterActions.loadMotherListSuccess({characters})),\n        catchError(error => of(fromCharacterActions.loadMotherListFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "updateCharacter$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.UPDATE_CHARACTER),\n    mergeMap((character: Character) => this.characterService.updateCharacter(character)\n      .pipe(\n        map(characters => fromCharacterActions.updateCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.updateCharacterFailure({error})))\n      ))\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { CharacterActionTypes }  from './character.actions';\nimport * as fromCharacterActions from './character.actions';\nimport { CharacterService } from 'src/app/services/character.service';\nimport { of } from 'rxjs';\nimport { mergeMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Character } from 'src/app/models/character.model';\nimport { Store } from '@ngrx/store';\nimport { CharacterState } from './index';\nimport { selectCharacters } from './character.selectors';\n\n@Injectable()\nexport class CharacterEffects {\n  constructor(\n    private actions$: Actions,\n    private store$: Store<CharacterState>,\n    private characterService: CharacterService\n  ) {}\n\n  loadCharacters$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTERS),\n    mergeMap(() => this.characterService.getCharacters()\n      .pipe(\n          mergeMap(characters => {\n            return [\n              fromCharacterActions.loadCharactersSuccess({characters}),\n              fromCharacterActions.loadCharacterTree({characters}),\n              fromCharacterActions.loadMotherList(),\n              fromCharacterActions.loadFatherList()\n            ];\n          }),\n          catchError(error => of(fromCharacterActions.loadCharactersFailure({error})))\n      )\n    )\n  ));\n\n  loadCharacter$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTER),\n    withLatestFrom(this.store$.select(selectCharacters)),\n    mergeMap(([action, storeState]) => this.characterService.getCharacter(action, storeState)\n      .pipe(\n        map(character => fromCharacterActions.loadCharacterSuccess({character})),\n        catchError(error => of(fromCharacterActions.loadCharacterFailure({error})))\n      )\n    )\n  ));\n\n  loadMothers$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_MOTHER_LIST),\n    mergeMap(() => this.characterService.getGenderList('F')\n      .pipe(\n        map(characters => fromCharacterActions.loadMotherListSuccess({characters})),\n        catchError(error => of(fromCharacterActions.loadMotherListFailure({error})))\n      ))\n  ));\n\n  loadFathers$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_FATHER_LIST),\n    mergeMap(() => this.characterService.getGenderList('M')\n      .pipe(\n        map(characters => fromCharacterActions.loadFatherListSuccess({characters})),\n        catchError(error => of(fromCharacterActions.loadFatherListFailure({error})))\n      ))\n  ));\n\n  createCharacter$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.CREATE_CHARACTER),\n    mergeMap((character: Character) => this.characterService.createCharacter(character)\n      .pipe(\n        map(characters => fromCharacterActions.createCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.createCharacterFailure({error})))\n      ))\n  ));\n\n  updateCharacter$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.UPDATE_CHARACTER),\n    mergeMap((character: Character) => this.characterService.updateCharacter(character)\n      .pipe(\n        map(characters => fromCharacterActions.updateCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.updateCharacterFailure({error})))\n      ))\n  ));\n\n  deleteCharacter$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.DELETE_CHARACTER),\n    mergeMap((data) => this.characterService.deleteCharacter(data)\n      .pipe(\n        map(characters => fromCharacterActions.deleteCharacterSuccess({characters})),\n        catchError(error => of(fromCharacterActions.deleteCharacterFailure({error})))\n      ))\n  ));\n\n  loadCharacterTree$ = createEffect(() => this.actions$.pipe(\n    ofType(CharacterActionTypes.LOAD_CHARACTER_TREE),\n    mergeMap((characters) => this.characterService.generateTree(characters, 0)\n      .pipe(\n        map(characterTree => fromCharacterActions.loadCharacterTreeSuccess({characterTree})),\n        catchError(error => of(fromCharacterActions.loadCharacterTreeFailure({error})))\n      ))\n  ));\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store$",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "characterService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store$",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "characterService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CharacterService",
            "id": "injectable-CharacterService-1634f7ffe446e80725312863a108ff8d9e949810907a92f17e52d91f58778f97a5add221b1ae4ea8ad300cbcdb42b5b0a28012f90c5f555461d73ebaa41f4f1f",
            "file": "src/app/services/character.service.ts",
            "properties": [
                {
                    "name": "characters",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isElectron",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createCharacter",
                    "args": [
                        {
                            "name": "character",
                            "type": "Character",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "character",
                            "type": "Character",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteCharacter",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateTree",
                    "args": [
                        {
                            "name": "characterList",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "characterList",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCharacter",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentCharacters",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Family | undefined>",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentCharacters",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCharacters",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getGenderList",
                    "args": [
                        {
                            "name": "gender",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CharacterGenderList[]>",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "gender",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNewTree",
                    "args": [
                        {
                            "name": "characterList",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Character[]",
                    "typeParameters": [],
                    "line": 254,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "characterList",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getParent",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentCharacters",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Parent",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentCharacters",
                            "type": "Character[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCharacter",
                    "args": [
                        {
                            "name": "character",
                            "type": "Character",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "character",
                            "type": "Character",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { ElectronService } from 'ngx-electron';\r\nimport { Character, CharacterGenderList, Family, Parent } from '../models/character.model';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CharacterState } from '../views/characters/store';\r\n\r\nexport let myCharacters: Character[] = [\r\n  {\r\n      id: 1,\r\n      characterName: 'Adam',\r\n      gender: 'M',\r\n      dateOfBirth: '50',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 2,\r\n      characterName: 'Eve',\r\n      gender: 'F',\r\n      dateOfBirth: '100',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  },\r\n  {\r\n      id: 3,\r\n      characterName: 'Seth',\r\n      gender: 'M',\r\n      dateOfBirth: '2896',\r\n      dateOfDeath: '2984',\r\n      fatherId: 1,\r\n      motherId: 2,\r\n      children: [],\r\n      fatherAgeAtBirth: 105,\r\n      fatherContinuedToLive: 807,\r\n      reference: 'Gen 5:6-8',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 4,\r\n      characterName: 'E\\'nosh',\r\n      gender: 'M',\r\n      dateOfBirth: '3791',\r\n      dateOfDeath: '2976',\r\n      fatherId: 3,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 90,\r\n      fatherContinuedToLive: 815,\r\n      reference: 'Gen 5:9-11',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui.'\r\n  },\r\n  {\r\n      id: 5,\r\n      characterName: 'Ca-l\\nan',\r\n      gender: 'M',\r\n      dateOfBirth: '3701',\r\n      dateOfDeath: '2861',\r\n      fatherId: 4,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 70,\r\n      fatherContinuedToLive: 840,\r\n      reference: 'Gen 5:12-14',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 6,\r\n      characterName: 'Ma-ha\\'la-le-el',\r\n      gender: 'M',\r\n      dateOfBirth: '3631',\r\n      dateOfDeath: '2801',\r\n      fatherId: 5,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 830,\r\n      reference: 'Gen 5:15-17',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 7,\r\n      characterName: 'Ja\\'red',\r\n      gender: 'M',\r\n      dateOfBirth: '3566',\r\n      dateOfDeath: '2604',\r\n      fatherId: 6,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 162,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:18-20',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 8,\r\n      characterName: 'E\\'noch',\r\n      gender: 'M',\r\n      dateOfBirth: '3404',\r\n      dateOfDeath: '2039',\r\n      fatherId: 7,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 300,\r\n      reference: 'Gen 5:21-23',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  }\r\n];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n  private characters: Character[] = [];\r\n  private isElectron: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _electronService: ElectronService,\r\n  ) {\r\n    if (this._electronService.ipcRenderer !== null) {\r\n      this.isElectron = true;\r\n    }\r\n    this.characters = myCharacters;\r\n\r\n   }\r\n\r\n  navigateToPage(page: string[]): void {\r\n    this.router.navigate(page);\r\n  }\r\n\r\n  getCharacter(action: { id: number, type: string }, currentCharacters: Character[]): Observable<Family | undefined> {\r\n    const character = currentCharacters.find((data: Character) => action.id === data.id);\r\n    const parentFather: Parent = this.getParent(character?.fatherId, currentCharacters);\r\n    const parentMother: Parent = this.getParent(character?.motherId, currentCharacters);\r\n    const children: Character[] = currentCharacters.filter(child => action.id === child.fatherId || action.id === child.motherId);\r\n\r\n    return of({\r\n      ...character,\r\n      mother: parentMother,\r\n      father: parentFather,\r\n      children\r\n    });\r\n  }\r\n\r\n  getCharacters(): Observable<Character[]> {\r\n    if (this.isElectron) {\r\n      return of(this._electronService.ipcRenderer.sendSync('get-characters')).pipe(\r\n        catchError((error: any) => throwError(error.json))\r\n      );\r\n    } else {\r\n      return of(this.characters);\r\n    }\r\n  }\r\n\r\n  createCharacter(character: Character): Observable<Character[]> {\r\n    if (this.isElectron) {\r\n      return of(this._electronService.ipcRenderer.sendSync('save-character', character)).pipe(\r\n        catchError((error: any) => throwError(error.json))\r\n      );\r\n    } else {\r\n      const newCharacter = {\r\n        ...character,\r\n        id: this.characters.length + 1\r\n      };\r\n\r\n      this.characters = this.characters.concat(newCharacter);\r\n      return of(this.characters);\r\n    }\r\n  }\r\n\r\n  updateCharacter(character: Character): Observable<Character[]> {\r\n\r\n    if (this.isElectron) {\r\n      return of(this._electronService.ipcRenderer.sendSync('update-character', character)).pipe(\r\n        catchError((error: any) => throwError(error.json))\r\n      );\r\n    } else {\r\n      this.characters = this.characters.map((data => {\r\n        if (data.id !== character.id) return data;\r\n        return {\r\n          ...data,\r\n          ...character\r\n        }\r\n      }));\r\n    \r\n      return of(this.characters);\r\n    }\r\n  }\r\n\r\n  deleteCharacter(data: { id: number, type: string}): Observable<Character[]> {\r\n    console.log('deleteCharacter data: ', data);\r\n    if (this.isElectron) {\r\n      return of(this._electronService.ipcRenderer.sendSync('delete-character', data)).pipe(\r\n        catchError((error: any) => {\r\n          console.log(`deleteCharacter error: ${error}`);\r\n          return Observable.throw(error.json)})\r\n      );\r\n    } else {\r\n      this.characters = this.characters.filter((character: Character) => character.id !== data.id);\r\n\r\n      return of(this.characters);\r\n    }\r\n  }\r\n\r\n  getGenderList(gender: string): Observable<CharacterGenderList[]> {\r\n    if (this.isElectron) {\r\n      return of(this._electronService.ipcRenderer.sendSync('get-gender-characters', gender)).pipe(\r\n        catchError((error: any) => Observable.throw(error.json))\r\n      );\r\n    } else {\r\n      const result: CharacterGenderList[] = this.characters.filter((character: Character) => character.gender.toLowerCase() === gender.toLowerCase());\r\n\r\n      return of(result.map(data => {\r\n        return {\r\n          id: data.id,\r\n          characterName: data.characterName\r\n        }\r\n      })); \r\n    }\r\n  }\r\n\r\n  generateTree(characterList: { characters: Character[], type: '' }, parent: number): Observable<Character[]> {\r\n    let out: Character[] = [];\r\n    out = this.getNewTree(characterList.characters, parent);\r\n  \r\n    return of(out);\r\n  }\r\n\r\n  private getParent(id: number, currentCharacters: Character[]): Parent {\r\n    return currentCharacters.map(item => {\r\n      return {\r\n        id: item.id,\r\n        name: item.characterName,\r\n        gender: item.gender\r\n      }\r\n    }).find(item => id === item.id);\r\n  }\r\n\r\n  private getNewTree(characterList: Character[], parent: number): Character[] {\r\n    let out: Character[] = [];\r\n\r\n    for (let i in characterList) {\r\n      if (characterList[i].fatherId == parent) {\r\n        let children: Character[] = this.getNewTree(characterList, characterList[i].id);\r\n        let newCharacter: Character = null;\r\n\r\n        if (children.length) {\r\n          newCharacter = {\r\n            ...characterList[i],\r\n            children\r\n          };\r\n        } else {\r\n          newCharacter = characterList[i];\r\n        }\r\n\r\n        out.push(newCharacter);\r\n      }\r\n    }\r\n\r\n    return out;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_electronService",
                        "type": "ElectronService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 129,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_electronService",
                        "type": "ElectronService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FakeElectronService",
            "id": "injectable-FakeElectronService-4b22a09435eb82518829e4db840117374880f8fc0580416e36e227de6031d627701994915e51c88f399fe8876388ee912a736e335dffbe641013290fdd8282f8",
            "file": "src/app/services/fake-electron.service.ts",
            "properties": [
                {
                    "name": "channels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Channel[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "channelSource",
                    "defaultValue": "new Subject<Message>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ipcRenderer",
                    "defaultValue": "{\n    on: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    once: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    send: (channel: string, args: string) => {},\n    sendSync: (channel: string, args: string) => {}\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nclass Channel {\n  constructor(public name: string, public listener: Function) {}\n}\n\nexport class Message {\n  channel: string;\n  params?: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeElectronService {\n  channelSource = new Subject<Message>();\n\n  private channels: Channel[] = [];\n\n  ipcRenderer = {\n    on: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    once: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    send: (channel: string, args: string) => {},\n    sendSync: (channel: string, args: string) => {}\n  };\n\n  constructor() {\n    this.channelSource.subscribe(msg => {\n      this.channels.find(channel => channel.name === msg.channel).listener({}, ...msg.params);\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 30
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "CharacterResolver",
            "id": "injectable-CharacterResolver-acad3c109c31e5c6d4cd2dcbb883441e194c46ec96beabdba8a40d6520c604cb060c28eab5af9127ffb370038369ef3c11f5e5e6e67ebe891542a09df886b79c",
            "file": "src/app/resolvers/character.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { CharacterEditComponent } from '../views/characters/character-edit/character-edit.component';\nimport { CharacterNewComponent } from '../views/characters/character-new/character-new.component';\nimport { CharacterState } from '../views/characters/store';\nimport * as fromActions from '../views/characters/store/character.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterResolver implements Resolve<string> {\n  constructor(\n    private readonly store: Store<CharacterState>\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n    const id: number =  parseInt(route.paramMap.get('id'));\n    this.store.dispatch(fromActions.loadCharacters());\n    this.store.dispatch(fromActions.loadCharacter({id: id}));\n    return of('NONE');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "CharactersResolver",
            "id": "injectable-CharactersResolver-d99c938a02ce35b5a9a5a4e9c6da059b78dc07ac57fd12f74723aedc14456b7431fb92c215e0d3875b37dadb2c328a1aeb225a5928c1aef799c4e54c3b7ed338",
            "file": "src/app/resolvers/characters.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CharacterState } from '../views/characters/store';\nimport * as fromActions from '../views/characters/store/character.actions';\nimport { CharacterListComponent } from '../views/characters/character-list/character-list.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharactersResolver implements Resolve<string> {\n  constructor(\n    private readonly store: Store<CharacterState>\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n    this.store.dispatch(fromActions.loadCharacters());\n    return of('NONE');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "HomeResolver",
            "id": "injectable-HomeResolver-a9a6fd7ab1793066b28b5e0a7d641858af19254292d311a4297b9ace88274b655d55cb1f522187fc04e1a09ce37645e80c304abc25f13a426d503bc97459f00c",
            "file": "src/app/resolvers/home.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CharacterState } from '../views/characters/store';\nimport * as fromActions from '../views/characters/store/character.actions';\nimport { HomeComponent } from '../views/home/home.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeResolver implements Resolve<string> {\n  constructor(\n    private readonly store: Store<CharacterState>\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n    this.store.dispatch(fromActions.loadCharacters());\n    return of('NONE');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "TimelineResolver",
            "id": "injectable-TimelineResolver-74831cf04c68b8e7ffbfeb7d2137cfa9f598c264f07240f6ea1691f2864045c6df86e54fb754214ce699c6c2ce0e175f0d3122e840b80c11dfd1f69cf2f84dcb",
            "file": "src/app/resolvers/timeline.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CharacterState } from '../views/characters/store';\nimport * as fromActions from '../views/characters/store/character.actions';\nimport { TimelineComponent } from '../views/timeline/timeline.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimelineResolver implements Resolve<string> {\n  constructor(\n    private readonly store: Store<CharacterState>\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n    this.store.dispatch(fromActions.loadCharacters());\n    return of('NONE');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-d83b95cb897fd7f1ecc7216a31a9167598810a902c9c43ec11b6a93965548994186b900fe348e64bdf35a97b36d2fdb26731097dc1738e7f73bc67d2d432a47c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Channel",
            "id": "class-Channel-4b22a09435eb82518829e4db840117374880f8fc0580416e36e227de6031d627701994915e51c88f399fe8876388ee912a736e335dffbe641013290fdd8282f8",
            "file": "src/app/services/fake-electron.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nclass Channel {\n  constructor(public name: string, public listener: Function) {}\n}\n\nexport class Message {\n  channel: string;\n  params?: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeElectronService {\n  channelSource = new Subject<Message>();\n\n  private channels: Channel[] = [];\n\n  ipcRenderer = {\n    on: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    once: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    send: (channel: string, args: string) => {},\n    sendSync: (channel: string, args: string) => {}\n  };\n\n  constructor() {\n    this.channelSource.subscribe(msg => {\n      this.channels.find(channel => channel.name === msg.channel).listener({}, ...msg.params);\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "listener",
                        "type": "Function",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "listener",
                        "type": "Function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "listener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Message",
            "id": "class-Message-4b22a09435eb82518829e4db840117374880f8fc0580416e36e227de6031d627701994915e51c88f399fe8876388ee912a736e335dffbe641013290fdd8282f8",
            "file": "src/app/services/fake-electron.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nclass Channel {\n  constructor(public name: string, public listener: Function) {}\n}\n\nexport class Message {\n  channel: string;\n  params?: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeElectronService {\n  channelSource = new Subject<Message>();\n\n  private channels: Channel[] = [];\n\n  ipcRenderer = {\n    on: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    once: (name: string, listener: Function) => {\n      this.channels.push(new Channel(name, listener));\n    },\n    send: (channel: string, args: string) => {},\n    sendSync: (channel: string, args: string) => {}\n  };\n\n  constructor() {\n    this.channelSource.subscribe(msg => {\n      this.channels.find(channel => channel.name === msg.channel).listener({}, ...msg.params);\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "channel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0023012fe875717a39fd6a81eb76df92d366cebabeacad73a7bb4c6c567da6220dc1a721c6a135eb8a8e0929cfad2c4082a160db6ebe8747bb977b77ab1ab8f7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#image-container {\r\n    overflow: hidden;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header></app-header>\n<router-outlet></router-outlet>\n<!-- <app-footer></app-footer> -->"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CharacterEditComponent",
            "id": "component-CharacterEditComponent-6bce61f25ec562d579b444cde20dfa3b7518fce8786f843d494d04442acf22ea8f76fb2ab6102918db4528d44f9093e1559fdeb15babf7224a8704853b888948",
            "file": "src/app/views/characters/character-edit/character-edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-character-edit",
            "styleUrls": [
                "./character-edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./character-edit.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "controlsConfig",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isNew",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ngDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submitObservable$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Character>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReset",
                    "args": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Character, Family } from 'src/app/models/character.model';\r\nimport { CharacterState } from '../store';\r\nimport * as fromActions from '../store/character.actions';\r\nimport { CharacterService } from 'src/app/services/character.service';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { selectCharacter } from '../store/character.selectors';\r\n\r\n@Component({\r\n  selector: 'app-character-edit',\r\n  templateUrl: './character-edit.component.html',\r\n  styleUrls: ['./character-edit.component.scss']\r\n})\r\nexport class CharacterEditComponent implements OnInit {\r\n  controlsConfig = {};\r\n  submitted: boolean;\r\n  isNew: boolean;\r\n  children: Character[];\r\n  ngDestroy$ = new Subject();\r\n  submitObservable$: Observable<Character>;\r\n\r\n  constructor(\r\n    private characerService: CharacterService,\r\n    private readonly store: Store<CharacterState>\r\n  ) {\r\n    this.submitted = false;\r\n    this.isNew = false;\r\n    this.children =[];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.pipe(select(selectCharacter))\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .subscribe((data: Family) => {\r\n        this.children = data.children;\r\n        this.controlsConfig = {\r\n          id: data.id,\r\n          characterName: data.characterName,\r\n          gender: data.gender,\r\n          dateOfBirth: data.dateOfBirth,\r\n          dateOfDeath: data.dateOfDeath,\r\n          fatherId: data.fatherId,\r\n          motherId: data.motherId,\r\n          fatherAgeAtBirth: data.fatherAgeAtBirth,\r\n          fatherContinuedToLive: data.fatherContinuedToLive,\r\n          reference: data.reference,\r\n          description: data.description\r\n        };\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.ngDestroy$.next(true);\r\n    this.ngDestroy$.complete();\r\n  }\r\n\r\n  onSubmit(registerForm: FormGroup): void {\r\n    this.submitted = true;\r\n    console.log(`CharacterEditComponent onSubmit: ${registerForm.value}`);\r\n    this.store.dispatch(fromActions.updateCharacter(registerForm.value))\r\n    this.store\r\n      .pipe(takeUntil(this.ngDestroy$))\r\n      .pipe(take(1))\r\n      .subscribe((response) => {\r\n        if (!response.error) {\r\n          this.submitted = false;\r\n          registerForm.reset();\r\n          this.navigateToPage(['/characters']);\r\n        }\r\n      });\r\n  }\r\n\r\n  onReset(registerForm: FormGroup): void {\r\n    this.submitted = false;\r\n    registerForm.reset();\r\n    this.navigateToPage(['/characters']);\r\n  }\r\n\r\n  navigateToPage(page: string[]): void {\r\n    this.characerService.navigateToPage(page);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width {\r\n    width: 100%;\r\n    margin: 0 20px;\r\n\r\n    textarea {\r\n        min-height: 120px;\r\n    }\r\n}\r\n\r\n.full-width-footer {\r\n    ::ng-deep .mat-figure {\r\n        justify-content: flex-end !important;\r\n        margin: 0 20px !important;\r\n\r\n        button {\r\n            margin: 0 5px 10px;\r\n        }\r\n    }\r\n}\r\n\r\n.fieldset-style {\r\n    font-size: 11px;\r\n    color: rgba(0,0,0,.6);\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n    border-width: .5px;\r\n    border-color: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.fieldset-list-style {\r\n    font-size: 14px;\r\n    padding-left: 0;\r\n}\r\n",
                    "styleUrl": "./character-edit.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\r\n  <span>Edit Character</span>\r\n</mat-toolbar>\r\n<app-character-form \r\n    [configData]=\"controlsConfig\"\r\n    [childrenData]=\"children\"\r\n    [isNew]=\"isNew\"\r\n    (submit)=\"onSubmit($event)\" \r\n    (reset)=\"onReset($event)\">\r\n</app-character-form>\r\n"
        },
        {
            "name": "CharacterFormComponent",
            "id": "component-CharacterFormComponent-888f486e07d626c41256d352087db0ad1990c30da566b8b65af4dd7f3fc44cd137059c5d6bc94a35754fdce2d3bc749350db4a25b6b2dafc8a0ee4ac231f4bfd",
            "file": "src/app/components/forms/character-form/character-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-character-form",
            "styleUrls": [
                "./character-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./character-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "childrenData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Character[]",
                    "decorators": []
                },
                {
                    "name": "configData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "isNew",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "reset",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<FormGroup>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "controlsConfig",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "createUpdate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "fatherList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CharacterGenderList[]>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "genderList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GenderType[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "motherList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CharacterGenderList[]>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "registerForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Output } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Character, CharacterGenderList } from 'src/app/models/character.model';\nimport { CharacterState } from 'src/app/views/characters/store';\nimport { selectFatherList, selectMotherList } from 'src/app/views/characters/store/character.selectors';\n\ninterface GenderType {\n  value: string;\n  name: string;\n}\n@Component({\n  selector: 'app-character-form',\n  templateUrl: './character-form.component.html',\n  styleUrls: ['./character-form.component.scss']\n})\nexport class CharacterFormComponent implements OnInit {\n  registerForm: FormGroup;\n  controlsConfig = {};\n  children: Character[];\n  genderList: GenderType[];\n  submitted:boolean;\n  createUpdate: string = '';\n  fatherList$: Observable<CharacterGenderList[]>;\n  motherList$: Observable<CharacterGenderList[]>;\n\n  @Input() public configData: { [key: string]: any; };\n  @Input() public childrenData: Character[];\n  @Input() public isNew: boolean;\n  @Output() public submit = new EventEmitter<FormGroup>();\n  @Output() public reset = new EventEmitter<FormGroup>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private readonly store: Store<CharacterState>\n  ) {\n    this.genderList = [\n      {\n        value: 'M',\n        name: 'Male'\n      },\n      {\n        value: 'F',\n        name: 'Female'\n      }\n    ];\n    this.registerForm = this.formBuilder.group({\n      id: [''],\n      characterName: ['', Validators.required],\n      gender: ['', Validators.required],\n      dateOfBirth: [''],\n      dateOfDeath: [''],\n      fatherId: [''],\n      motherId: [''],\n      fatherAgeAtBirth: [''],\n      fatherContinuedToLive: [''],\n      reference: [''],\n      description: ['']\n    });\n    this.controlsConfig = {\n      id: null,\n      characterName: '',\n      gender: 'M',\n      dateOfBirth: null,\n      dateOfDeath: null,\n      fatherId: 0,\n      motherId: 0,\n      fatherAgeAtBirth: null,\n      fatherContinuedToLive: null,\n      reference: '',\n      description: ''\n    };\n    this.submitted = false;\n    this.fatherList$ = this.store.select(selectFatherList);\n    this.motherList$ = this.store.select(selectMotherList);\n  }\n\n  ngOnInit(): void {\n    this.createUpdate = this.isNew ? 'Create' : 'Update';\n    this.children = this.childrenData;\n    this.controlsConfig = {\n      id: this.configData.id,\n      characterName: this.configData.characterName,\n      gender: this.configData.gender,\n      dateOfBirth: this.configData.dateOfBirth,\n      dateOfDeath: this.configData.dateOfDeath,\n      fatherId: this.configData.fatherId,\n      motherId: this.configData.motherId,\n      fatherAgeAtBirth: this.configData.fatherAgeAtBirth,\n      fatherContinuedToLive: this.configData.fatherContinuedToLive,\n      reference: this.configData.reference,\n      description: this.configData.description\n    };\n    this.registerForm.reset(this.controlsConfig);\n    console.log('configData: ', this.configData);\n  }\n\n  get f() { return this.registerForm && this.registerForm.controls; }\n\n  onSubmit(): void {\n    console.log('CharacterFormComponent onSubmit was called...');\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.submit.emit(this.registerForm);\n  }\n\n  onReset(): void {\n    console.log('CharacterFormComponent onReset was called...');\n    this.reset.emit(this.registerForm);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width {\r\n    width: 100%;\r\n    margin: 0 20px;\r\n\r\n    textarea {\r\n        min-height: 120px;\r\n    }\r\n}\r\n\r\n.full-width-footer {\r\n    ::ng-deep .mat-figure {\r\n        justify-content: flex-end !important;\r\n        margin: 0 20px !important;\r\n\r\n        button {\r\n            margin: 0 5px 10px;\r\n        }\r\n    }\r\n}\r\n\r\n.fieldset-style {\r\n    font-size: 11px;\r\n    color: rgba(0,0,0,.6);\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n    border-width: .5px;\r\n    border-color: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.fieldset-list-style {\r\n    font-size: 14px;\r\n    padding-left: 0;\r\n}",
                    "styleUrl": "./character-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                }
            },
            "templateData": "\n<mat-card class=\"mat-elevation-z\">\n    <mat-card-content>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"mat-elevation-z8\">\n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Name</mat-label>\n                    <input formControlName=\"characterName\" matInput placeholder=\"Character Name\">\n                    <mat-hint>Name of the character to be added to the timeline.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\">\n                        <mat-option *ngFor=\"let gen of genderList\" [value]=\"gen.value\">\n                            {{ gen.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-hint>Gnder of Character.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Date of Birth</mat-label>\n                    <input formControlName=\"dateOfBirth\" matInput placeholder=\"Character Date of Birth\">\n                    <mat-hint>Date of birth of character.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Date of Death</mat-label>\n                    <input formControlName=\"dateOfDeath\" matInput placeholder=\"Character Date of Death\">\n                    <mat-hint>Date of death of character.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Father</mat-label>\n                    <mat-select formControlName=\"fatherId\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let father of fatherList$ | async\" [value]=\"father.id\">\n                        {{ father.characterName }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-hint>Father of Character.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Mother</mat-label>\n                    <mat-select formControlName=\"motherId\">\n                        <mat-option>--</mat-option>\n                        <mat-option *ngFor=\"let mother of motherList$ | async\" [value]=\"mother.id\">\n                        {{ mother.characterName }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-hint>Mother of Character.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <fieldset class=\"full-width fieldset-style\">\n                    <legend>Children</legend>\n                    <mat-list>\n                        <mat-list-item class=\"fieldset-list-style\" role=\"list\" *ngFor=\"let child of children\">\n                            {{ child.characterName }}\n                        </mat-list-item>\n                    </mat-list>\n                </fieldset>\n            </mat-grid-tile>\n        </mat-grid-list>        \n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Father Age at Birth</mat-label>\n                    <input formControlName=\"fatherAgeAtBirth\" matInput placeholder=\"Character's Father Age at Birth\">\n                    <mat-hint>Father's Age at Character Birth.</mat-hint>\n                </mat-form-field>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Lived Till</mat-label>\n                    <input formControlName=\"fatherContinuedToLive\" matInput placeholder=\"Character's Father continued to live till\">\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"2\" rowHeight=\"100px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Reference</mat-label>\n                    <input formControlName=\"reference\" matInput placeholder=\"Character Reference\">\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"1\" rowHeight=\"175px\" gutterSize=\"5px\">\n            <mat-grid-tile>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Description</mat-label>\n                    <textarea formControlName=\"description\" matInput placeholder=\"Description for character.\"></textarea>\n                </mat-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"1\" rowHeight=\"50px\" gutterSize=\"5px\">\n            <mat-grid-tile class=\"full-width-footer\">\n                <button mat-raised-button type=\"submit\" [disabled]=\"registerForm.invalid\" color=\"primary\" class=\"footer-button\">{{createUpdate}}</button>\n                <button mat-raised-button type=\"reset\" (click)=\"onReset()\" color=\"warn\" class=\"footer-button\">Cancel</button>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </form>\n    </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "CharacterListComponent",
            "id": "component-CharacterListComponent-adb1fe4ea352f10752295f17127bcd1e7d57fbbd67d13aeeb460a75a135f592022f93f25b52498397b8f01083bd47100281259854937ebe148cdca18798cd90c",
            "file": "src/app/views/characters/character-list/character-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-character-list",
            "styleUrls": [
                "./character-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./character-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'id',\n    'characterName', \n    'dateOfBirth', \n    'dateOfDeath',\n    'fatherName',\n    'motherName',\n    'sonName',\n    'fatherAgeAtBirth',\n    'fatherContinuedToLive',\n    'fatherContinuedToLive',\n    'reference',\n    'actions'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteCharacter",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadCharacters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Character } from 'src/app/models/character.model';\nimport { CharacterService } from 'src/app/services/character.service';\nimport { CharacterState } from '../store';\nimport * as fromActions from '../store/character.actions'\nimport { selectCharacters } from '../store/character.selectors';\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.scss']\n})\nexport class CharacterListComponent implements OnInit {\n  public dataSource: Character[];\n  public displayedColumns: string[] = [\n    'id',\n    'characterName', \n    'dateOfBirth', \n    'dateOfDeath',\n    'fatherName',\n    'motherName',\n    'sonName',\n    'fatherAgeAtBirth',\n    'fatherContinuedToLive',\n    'fatherContinuedToLive',\n    'reference',\n    'actions'\n  ];\n\n  constructor(\n    private characerService: CharacterService,\n    private store: Store<CharacterState>) {\n      this.dataSource = [];\n    }\n\n  ngOnInit(): void {\n    \n    this.loadCharacters();\n  }\n\n  loadCharacters(): void {\n    this.store.pipe(select(selectCharacters))\n      .subscribe(data => {\n        this.dataSource = data;\n      });\n  }\n\n  navigateToPage(page: string[]): void {\n    this.characerService.navigateToPage(page);\n  }\n\n  deleteCharacter(id: number): void {\n    this.store.dispatch(fromActions.deleteCharacter({id}));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".character-list-header {\r\n    width: 100%;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n}",
                    "styleUrl": "./character-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <div class=\"character-list-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxflex=\"80\">\n      Characters\n    </div>\n    <div fxflex=\"20\" fxlayoutalign=\"center right\">\n      <button mat-flat-button color=\"primary\" (click)=\"navigateToPage(['/character-new'])\">New Character</button>\n    </div>\n  </div>\n</mat-toolbar>\n<mat-card class=\"mat-elevation-z\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> ID </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"characterName\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.characterName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfBirth\">\n      <th mat-header-cell *matHeaderCellDef> Date of Birth </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.dateOfBirth}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfDeath\">\n      <th mat-header-cell *matHeaderCellDef> Date of Death </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.dateOfDeath}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fatherName\">\n      <th mat-header-cell *matHeaderCellDef> Father </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fatherName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"motherName\">\n      <th mat-header-cell *matHeaderCellDef> Mother </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.motherName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"sonName\">\n      <th mat-header-cell *matHeaderCellDef> Son(s) </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.sonName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fatherAgeAtBirth\">\n      <th mat-header-cell *matHeaderCellDef> Father Age at Birth </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fatherAgeAtBirth}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fatherContinuedToLive\">\n      <th mat-header-cell *matHeaderCellDef> Lived till </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fatherContinuedToLive}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"\">\n      <th mat-header-cell *matHeaderCellDef> Total </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fatherContinuedToLive + element.fatherAgeAtBirth}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reference\">\n      <th mat-header-cell *matHeaderCellDef> Reference </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.reference}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-flat-button color=\"primary\"\n          (click)=\"navigateToPage(['/character-edit', element.id])\">Edit</button>&nbsp;\n        <button mat-flat-button color=\"warn\" (click)=\"deleteCharacter(element.id)\">Delete</button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</mat-card>\n"
        },
        {
            "name": "CharacterNewComponent",
            "id": "component-CharacterNewComponent-72c3cb976cdcbce31f56b7424178b493e365b26052a9bcd17c0e0b5783317ab35c97dfafdb93251ece82bbb9813a6fc1815b64caa1e455e3d2d1ba7425d8c8c6",
            "file": "src/app/views/characters/character-new/character-new.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-character-new",
            "styleUrls": [
                "./character-new.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./character-new.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "controlsConfig",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isNew",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ngOnDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReset",
                    "args": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "registerForm",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Character } from 'src/app/models/character.model';\nimport { CharacterService } from 'src/app/services/character.service';\nimport { CharacterState } from '../store';\nimport * as fromActions from '../store/character.actions';\n\n@Component({\n  selector: 'app-character-new',\n  templateUrl: './character-new.component.html',\n  styleUrls: ['./character-new.component.scss']\n})\nexport class CharacterNewComponent implements OnInit {\n  controlsConfig = {};\n  children: Character[];\n  submitted: boolean;\n  isNew: boolean;\n  ngOnDestroy$ = new Subject();\n\n  constructor(\n    private characerService: CharacterService,\n    private readonly store: Store<CharacterState>\n  ) {\n    this.submitted = false;\n    this.isNew = true;\n    this.children =[];\n  }\n\n  ngOnInit(): void {\n    this.controlsConfig = {\n      id: null,\n      characterName: '',\n      gender: 'M',\n      dateOfBirth: null,\n      dateOfDeath: null,\n      fatherId: null,\n      motherId: null,\n      fatherAgeAtBirth: null,\n      fatherContinuedToLive: null,\n      reference: '',\n      description: ''\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.ngOnDestroy$.next(true);\n    this.ngOnDestroy$.complete();\n  }\n\n  onSubmit(registerForm: FormGroup): void {\n    this.submitted = true;\n    registerForm.value.fatherId = !registerForm.value.fatherId ? 0 : registerForm.value.fatherId;\n    registerForm.value.motherId = !registerForm.value.motherId ? 0 : registerForm.value.motherId;\n    console.log(`CharacterNewComponent onSubmit: ${registerForm.value}`);\n    this.store.dispatch(fromActions.createCharacter(registerForm.value))\n    this.store\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .pipe(take(1))\n      .subscribe((response) => {\n        if (!response.error) {\n          this.submitted = false;\n          registerForm.reset();\n          this.navigateToPage(['/characters']);\n        }\n      });\n  }\n\n  onReset(registerForm: FormGroup): void {\n    this.submitted = false;\n    registerForm.reset();\n    this.navigateToPage(['/characters']);\n  }\n\n  navigateToPage(page: string[]): void {\n    this.characerService.navigateToPage(page);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./character-new.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "characerService",
                        "type": "CharacterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <span>New Character</span>\n</mat-toolbar>\n<app-character-form \n    [configData]=\"controlsConfig\"\n    [childrenData]=\"children\"\n    [isNew]=\"isNew\"\n    (submit)=\"onSubmit($event)\" \n    (reset)=\"onReset($event)\">\n</app-character-form>\n"
        },
        {
            "name": "CharacterProfileDialogComponent",
            "id": "component-CharacterProfileDialogComponent-38a785eed3c447400000fe1576fbd4f835a94b40a4116869d9b8859488369e2832df8e80218c2c4a3e22fe71f87caf112c71166a1749e2ad76cae33eaa1686e6",
            "file": "src/app/modals/character-profile-dialog/character-profile-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-character-profile-dialog",
            "styleUrls": [
                "./character-profile-dialog.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./character-profile-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "characterProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Family",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<CharacterProfileDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadProfile",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { select, Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Family } from 'src/app/models/character.model';\nimport { CharacterState } from 'src/app/views/characters/store';\nimport { selectCharacter } from 'src/app/views/characters/store/character.selectors';\nimport * as fromActions from '../../views/characters/store/character.actions';\n\n@Component({\n  selector: 'app-character-profile-dialog',\n  templateUrl: './character-profile-dialog.component.html',\n  styleUrls: ['./character-profile-dialog.component.css']\n})\nexport class CharacterProfileDialogComponent implements OnInit {\n  public characterProfile: Family;\n  private ngDestroy$ = new Subject();\n\n  constructor(\n    public dialogRef: MatDialogRef<CharacterProfileDialogComponent>,\n    private readonly store: Store<CharacterState>\n  ) { }\n\n  ngOnInit(): void {\n    this.store.pipe(select(selectCharacter))\n      .pipe(takeUntil(this.ngDestroy$))\n      .subscribe((data: Family) => {\n        console.log('data: ', data);\n        this.characterProfile = data;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.ngDestroy$.next(true);\n    this.ngDestroy$.complete();\n  }\n\n  loadProfile(id: number): void {\n    console.log('Loading character id: ', id);\n    this.store.dispatch(fromActions.loadCharacter({id: id}));\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-chip:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.mat-typography {\r\n    margin-top: 15px;\r\n}\r\n\r\n.description {\r\n    margin-bottom: 15px;\r\n}",
                    "styleUrl": "./character-profile-dialog.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CharacterProfileDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<CharacterProfileDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2 mat-dialog-title>{{characterProfile.characterName}}</h2>\n<mat-divider></mat-divider>\n<mat-dialog-content class=\"mat-typography\">\n  <mat-grid-list cols=\"4\" rowHeight=\"fit\">\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"25px\">\n      <strong>Gender: </strong> <span>{{characterProfile.gender}}</span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"25px\">\n      <strong>Lived: </strong> <span>{{characterProfile.dateOfBirth}}</span> to <span>{{characterProfile.dateOfDeath}} BCE</span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"2\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"40px\" *ngIf=\"characterProfile.father\">\n      <strong>Father: </strong> \n      <span><mat-chip color=\"accent\" (click)=\"loadProfile(characterProfile.father.id)\">{{characterProfile.father.name}}</mat-chip></span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"2\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"40px\" *ngIf=\"characterProfile.mother\">\n      <strong>Mother: </strong> \n      <span><mat-chip color=\"accent\" mat-flat-button (click)=\"loadProfile(characterProfile.mother.id)\">{{characterProfile.mother.name}}</mat-chip></span>\n    </mat-grid-list>\n    <mat-grid-list \n      cols=\"2\" \n      rows=\"1\" \n      gutterSize=\"10px\" \n      rowHeight=\"65px\" \n      *ngIf=\"characterProfile.children.length > 0\">\n      <strong>Children: </strong>\n      <mat-chip-list aria-label=\"Children\">\n        <mat-chip \n          *ngFor=\"let child of characterProfile.children\"\n          color=\"accent\"\n          (click)=\"loadProfile(child.id)\">\n          {{child.characterName}}\n        </mat-chip>\n      </mat-chip-list>\n    </mat-grid-list>\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"25px\">\n      <strong>Father's age at birth: </strong> <span>{{characterProfile.fatherAgeAtBirth}}</span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"25px\">\n      <strong>Father continued to live for: </strong> <span>{{characterProfile.fatherContinuedToLive}}</span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\" rowHeight=\"25px\">\n      <strong>Bible Reference: </strong> <span>{{characterProfile.reference}}</span>\n    </mat-grid-list>\n    <mat-grid-list cols=\"4\" rows=\"1\" gutterSize=\"10px\">\n      <div><strong>Description: </strong></div>\n      <div class=\"description\">{{characterProfile.description}}</div>\n    </mat-grid-list>\n  </mat-grid-list>\n</mat-dialog-content>\n<mat-divider></mat-divider>\n<mat-dialog-actions align=\"end\">\n  <button mat-flat-button color=\"primary\" (click)=\"closeDialog()\">Close</button>\n</mat-dialog-actions>\n\n<!-- \nCharacter\nid: number;\ncharacterName: string;\ngender: string;\ndateOfBirth: string;\ndateOfDeath: string;\nfatherId: number;\nmotherId: number;\nchildren: Character[];\nfatherAgeAtBirth: number | null;\nfatherContinuedToLive: number | null;\nreference: string;\ndescription: string;\nfather: Parent;\nmother: Parent;\n\nParent\nid: number;\nname: string;\ngender: string; \n-->"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-964df8a65c158080e18908a5998d24166d80f13b71b15589cf4abaf6b11852ab9faaeb0b2087372598332b4a7d25850585b068d15c0aa02f28649e719f4c9614",
            "file": "src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"footer\">footer works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0cd94fbc94a83702e45bf987cb3b3f9074d69cd27e6ca2e4fbac0dc5b5047bd4dc3a9ce8a77f6bd9ab7ae3e6ca8e49b34bed529ca0da0fa428fec544a0324870",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-684163c49ef3e16ccf9abd93e83d15ef66f1cf779310a1d59af117448e9368eda21c11f9172769d2f88e4f296d19e122980a77da037c8900913c74a79e1ef571-1",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navigation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Navigation>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { Navigation } from 'src/app/models/navigation.model.';\n\nconst NAVI: Array<Navigation> = [\n  {\n    id: 1,\n    name: 'Home',\n    url: ['/'],\n    isActive: false\n  },\n  {\n    id: 2,\n    name: 'Timeline',\n    url: ['/time-line'],\n    isActive: false\n  },\n  {\n    id: 3,\n    name: 'Characters',\n    url: ['/characters'],\n    isActive: false\n  },\n  {\n    id: 4,\n    name: 'Help',\n    url: ['/help'],\n    isActive: false\n  }\n];\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  public navigation: Array<Navigation>;\n\n  constructor(\n    private router: Router\n  ) {\n    this.navigation = NAVI;\n  }\n\n  ngOnInit(): void {\n    this.router.events\n    .pipe(filter((event) => event instanceof NavigationEnd))  \n    .subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.navigation = this.navigation.map(link => {\n          return {\n            ...link,\n            isActive: link.url.includes(event.url)\n          }\n        });\n      }\n    });\n  }\n\n  navigateToPage(page: string[]): void {\n    this.router.navigate(page);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header-spacer {\r\n    flex: 1 1 auto;\r\n}\r\n\r\n.mat-button.active {\r\n    color: darkgrey;\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n  <button mat-icon-button (click)=\"navigateToPage(['/'])\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Timeline Maker</span>\n  <span class=\"header-spacer\"></span>\n  <button mat-button [class.active]=\"nav.isActive\" *ngFor=\"let nav of navigation\" (click)=\"navigateToPage(nav.url)\">\n    {{ nav.name }}\n  </button>\n</mat-toolbar>\n"
        },
        {
            "name": "HelpComponent",
            "id": "component-HelpComponent-bfe2dbfd3c3cb9b65f26cfe567c2971646428b473365faadc2f191904f4f226037c28b806a682c54b1cf45d19970110b28d7a9f737ecbdf765437dfd85967698",
            "file": "src/app/views/help/help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-help",
            "styleUrls": [
                "./help.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "underConstruction",
                    "defaultValue": "'assets/images/under_construction.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n  public underConstruction: string = 'assets/images/under_construction.png';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./help.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <span>Help</span>\n</mat-toolbar>\n<mat-card class=\"mat-elevation-z\">\n  <div id=\"image-container\">\n    <img mat-card-image [src]=\"underConstruction\" />\n  </div>\n</mat-card>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-9f5f13ed26414460d248c7c53f07aef541bec530e4f1b65b56bdcc61bdc4bd9c77c1083b7398feb22ad1ca4c4a97cb5b56e9fed716dc7e348dc703ab53a61a8d",
            "file": "src/app/views/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "homeLogo",
                    "defaultValue": "'assets/images/family-tree-02.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public homeLogo: string = 'assets/images/family-tree-02.png';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#image-container {\r\n    overflow: hidden;\r\n}",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <span>Home</span>\n</mat-toolbar>\n<mat-card class=\"mat-elevation-z\">\n  <div id=\"image-container\">\n    <img mat-card-image [src]=\"homeLogo\" />\n  </div>\n</mat-card>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-432c9ae0bcf6e2e1f46701f7565a67376cb10145b7d049c5fe930cf8f075c6e02e24151589750b18cbaa8266f7c61393b95c4d833fbfd71ee228904aa014349f",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-a478094d44cb8172a8d93b2cca5aea86fc46be1648674e9915771758d706c3976a463b4a5df5b05d5ddcf591617c80ffd819ffb6e1ef39c07fd6419abdf3cf77",
            "file": "src/app/views/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <span class=\"page-not-found\">Page Not Found</span>\n</mat-toolbar>\n"
        },
        {
            "name": "TimelineComponent",
            "id": "component-TimelineComponent-1ed69162aaf930408411a23f8ac3a2aee03d7e325cf3777f471a982d46d32b7b5a0f00a10cc52cc91f06a45289ae652ce1a03a8b69ee00ad54cd9d767562ea50",
            "file": "src/app/views/timeline/timeline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-timeline",
            "styleUrls": [
                "./timeline.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./timeline.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { select, Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CharacterProfileDialogComponent } from 'src/app/modals/character-profile-dialog/character-profile-dialog.component';\nimport { Character } from 'src/app/models/character.model';\nimport { CharacterState } from '../characters/store';\nimport { selectCharacterTree } from '../characters/store/character.selectors';\nimport * as fromActions from '../characters/store/character.actions';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit {\n  public dataSource: Character[];\n  ngOnDestroy$ = new Subject();\n  \n  constructor(\n    private store: Store<CharacterState>,\n    private dialog: MatDialog\n    ) {\n      this.dataSource = [];\n    }\n\n  ngOnInit(): void {\n    this.store.pipe(select(selectCharacterTree))\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe(data => {\n        this.dataSource = data;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.ngOnDestroy$.next(true);\n    this.ngOnDestroy$.complete();\n  }\n\n  openDialog(id: number): void {\n    this.store.dispatch(fromActions.loadCharacter({id: id}));\n    const dialogRef = this.dialog.open(CharacterProfileDialogComponent, {\n      width: '600px',\n      autoFocus: false,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed: ', result);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tree {\r\n    overflow: hidden;\r\n    padding: 10px 10px 20px;\r\n}\r\n\r\n.tree ul {\r\n\tpadding-top: 20px; position: relative;\r\n\toverflow: hidden;\r\n\ttransition: all 0.5s;\r\n\t-webkit-transition: all 0.5s;\r\n\t-moz-transition: all 0.5s;\r\n}\r\n\r\n.tree li {\r\n\tfloat: left; text-align: center;\r\n\tlist-style-type: none;\r\n\tposition: relative;\r\n    padding: 20px 5px 0 5px;\r\n\t\r\n\ttransition: all 0.5s;\r\n\t-webkit-transition: all 0.5s;\r\n\t-moz-transition: all 0.5s;\r\n}\r\n\r\n/*We will use ::before and ::after to draw the connectors*/\r\n\r\n.tree li::before, .tree li::after{\r\n\tcontent: '';\r\n\tposition: absolute; top: 0; right: 50%;\r\n\tborder-top: 1px solid #ccc;\r\n\twidth: 50%; height: 20px;\r\n}\r\n.tree li::after{\r\n\tright: auto; left: 50%;\r\n\tborder-left: 1px solid #ccc;\r\n}\r\n\r\n/*We need to remove left-right connectors from elements without \r\nany siblings*/\r\n.tree li:only-child::after, .tree li:only-child::before {\r\n\tdisplay: none;\r\n}\r\n\r\n/*Remove space from the top of single children*/\r\n.tree li:only-child{ padding-top: 0;}\r\n\r\n/*Remove left connector from first child and \r\nright connector from last child*/\r\n.tree li:first-child::before, .tree li:last-child::after{\r\n\tborder: 0 none;\r\n}\r\n/*Adding back the vertical connector to the last nodes*/\r\n.tree li:last-child::before{\r\n\tborder-right: 1px solid #ccc;\r\n\tborder-radius: 0 5px 0 0;\r\n\t-webkit-border-radius: 0 5px 0 0;\r\n\t-moz-border-radius: 0 5px 0 0;\r\n}\r\n.tree li:first-child::after{\r\n\tborder-radius: 5px 0 0 0;\r\n\t-webkit-border-radius: 5px 0 0 0;\r\n\t-moz-border-radius: 5px 0 0 0;\r\n}\r\n\r\n/*Time to add downward connectors from parents*/\r\n.tree ul ul::before{\r\n\tcontent: '';\r\n\tposition: absolute; top: 0; left: 50%;\r\n\tborder-left: 1px solid #ccc;\r\n\twidth: 0; height: 20px;\r\n}\r\n\r\n.tree li  mat-card {\r\n\tborder: 1px solid #ccc;\r\n\tpadding: 5px 10px;\r\n\ttext-decoration: none;\r\n\tcolor: #666;\r\n\tfont-family: arial, verdana, tahoma;\r\n\tfont-size: 11px;\r\n\tdisplay: inline-block;\r\n\t\r\n\tborder-radius: 5px;\r\n\t-webkit-border-radius: 5px;\r\n\t-moz-border-radius: 5px;\r\n\t\r\n\ttransition: all 0.5s;\r\n\t-webkit-transition: all 0.5s;\r\n\t-moz-transition: all 0.5s;\r\n}\r\n\r\n/*Time for some hover effects*/\r\n/*We will apply the hover effect the the lineage of the element also*/\r\n.tree li mat-card:hover, .tree li mat-card:hover+ul li mat-card {\r\n\tbackground: #c8e4f8; color: #000; border: 1px solid #94a0b4;\r\n}\r\n/*Connector styles on hover*/\r\n.tree li mat-card:hover+ul li::after, \r\n.tree li mat-card:hover+ul li::before, \r\n.tree li mat-card:hover+ul::before, \r\n.tree li mat-card:hover+ul ul::before{\r\n\tborder-color:  #94a0b4;\r\n}",
                    "styleUrl": "./timeline.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<CharacterState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar>\n  <span>Timeline</span>\n</mat-toolbar>\n<mat-card class=\"mat-elevation-z\">\n  <div class=\"tree mat-elevation-z8\" layout=\"row\" layout-align=\"center start\">\n    <ul>\n      <li *ngFor=\"let character of dataSource\">\n        <mat-card (click)=\"openDialog(character.id)\">\n          <div>{{ character.characterName }}</div>\n          <div *ngIf=\"character.dateOfBirth > 0 || character.dateOfDeath > 0\">\n            {{ character.dateOfBirth }} to {{ character.dateOfDeath }}\n          </div>\n        </mat-card>\n        <ng-container *ngIf=\"character.children && character.children.length > 0\">\n          <ng-container *ngTemplateOutlet=\"characterTemplate;context:character\"></ng-container>\n        </ng-container>\n      </li>\n    </ul>\n    <ng-template #characterTemplate let-childCharacters=\"children\">\n      <ul>\n        <li *ngFor=\"let child of childCharacters\">\n          <mat-card (click)=\"openDialog(child.id)\">\n            <div>{{ child.characterName }}</div>\n            <div>{{ child.dateOfBirth }} - {{ child.dateOfDeath }} BCE</div>\n          </mat-card>\n          <ng-container *ngIf=\"child.children && child.children.length > 0\">\n            <ng-container *ngTemplateOutlet=\"characterTemplate;context:child\"></ng-container>\n          </ng-container>\n        </li>\n      </ul>\n    </ng-template>\n  </div>\n</mat-card>\n"
        }
    ],
    "modules": [
        {
            "name": "AnimationsModule",
            "id": "module-AnimationsModule-044f8c12e6408babdcede628d95bf2031752b3789ddefbe4b352c91f3b2a114be9e5afa9554a04f58486a93fe824227a6e83c61e9fcf6a5062c439c268b4b106",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/animations/animations.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AnimationsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-c15791a25f90b24b1c9d30375e4cdedee90caaffe35dab0c9c262d458539de1d5facadfca3abb6dcc5236c50079258079fb77b0797efc64e2533e86a79d56068",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './store/reducers';\n\nimport { AnimationsModule } from './animations/animations.module';\nimport { ComponentsModule } from './components/components.module';\nimport { MaterialsModule } from './materials/materials.module';\nimport { ModalsModule } from './modals/modals.module';\nimport { ViewsModule } from './views/views.module';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgxElectronModule } from 'ngx-electron';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    AnimationsModule,\n    MaterialsModule,\n    ModalsModule,\n    FlexLayoutModule,\n    ComponentsModule,\n    NgxElectronModule,\n    ViewsModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      }\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n  ],\n  exports: [\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AnimationsModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialsModule"
                        },
                        {
                            "name": "ModalsModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-05a80afc62fa4284bd9ccc12ae3176929dc6cbea8d699f3800b46e624034b6602b4abc211c082c5d5c501a7093c75618e637745b3e62e3e29ac5f39e3804b676",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { HomeComponent } from './views/home/home.component';\nimport { CharacterEditComponent } from './views/characters/character-edit/character-edit.component';\nimport { CharacterListComponent } from './views/characters/character-list/character-list.component';\nimport { CharacterNewComponent } from './views/characters/character-new/character-new.component';\nimport { HelpComponent } from './views/help/help.component';\nimport { TimelineComponent } from './views/timeline/timeline.component';\nimport { PageNotFoundComponent } from './views/page-not-found/page-not-found.component';\n\n// Resolvers\nimport { CharacterResolver } from './resolvers/character.resolver';\nimport { CharactersResolver } from './resolvers/characters.resolver';\nimport { HomeResolver } from './resolvers/home.resolver';\nimport { TimelineResolver } from './resolvers/timeline.resolver';\n\nexport const routes: Routes = [\n  { \n    path: 'characters', \n    component: CharacterListComponent, \n    resolve: {\n      characters: CharactersResolver\n    }\n  },\n  {\n    path: 'character-new',\n    component: CharacterNewComponent,\n    resolve: {\n      character: CharacterResolver\n    }\n  },\n  { \n    path: 'character-edit/:id', \n    component: CharacterEditComponent,\n    resolve: {\n      character: CharacterResolver\n    }\n  },\n  { \n    path: 'time-line',\n    component: TimelineComponent,\n    resolve: {\n      characters: TimelineResolver\n    }\n  },\n  { \n    path: 'help',\n    component: HelpComponent\n  },\n  { \n    path: '', \n    component: HomeComponent,\n    resolve: {\n      home: HomeResolver\n    }\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CharactersModule",
            "id": "module-CharactersModule-bacc311a672c27d74136fbcf993401da075a88f183c8081b67edace596c86ee20406547b00caacaf242dbfabdebe1f34c5f905a6715f806290cf5e361c97db76",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/views/characters/characters.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromCharacterState from './store';\nimport { CharacterListComponent } from './character-list/character-list.component';\nimport { CharacterNewComponent } from './character-new/character-new.component';\nimport { CharacterEditComponent } from './character-edit/character-edit.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CharacterEffects } from './store/character.effects';\nimport { MaterialsModule } from '../../materials/materials.module';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    CharacterListComponent,\n    CharacterNewComponent,\n    CharacterEditComponent\n  ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    StoreModule.forFeature(\n      fromCharacterState.characterStateFeatureKey,\n      fromCharacterState.reducers,\n      { metaReducers: fromCharacterState.metaReducers }\n    ),\n    EffectsModule.forFeature([CharacterEffects]),\n    MaterialsModule,\n    ReactiveFormsModule,\n    ComponentsModule\n  ]\n})\nexport class CharactersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CharacterEditComponent"
                        },
                        {
                            "name": "CharacterListComponent"
                        },
                        {
                            "name": "CharacterNewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-1fa01c4897fbef1f12455ea3fdf6cbc8d2a09f7cc42a13db5bda86c65bc657f5bd86a1f8a1cd689010a53bc2ae55e30a97eaa6e679c28e28acbebf0ba641aa2b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { CharacterFormComponent } from './forms/character-form/character-form.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MaterialsModule } from '../materials/materials.module';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    CharacterFormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    LayoutModule,\n    MaterialsModule\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    CharacterFormComponent\n  ]\n})\nexport class ComponentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CharacterFormComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CharacterFormComponent"
                        },
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialsModule",
            "id": "module-MaterialsModule-5638fe95c49028353df744e4b8fe0d533886796db2b76ec88d629d448e2315bf0b6fa55d51bfc4040e8178d7702136e1ee4bc23aa06299d6d087945756a85aee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/materials/materials.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    // MatTableDataSource,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ModalsModule",
            "id": "module-ModalsModule-2b9529d2f9638db72953771957edb3598cf035c12895d2fa4284bb7dd6ef0e100a49d0806430e7305927f54017e2e0ce1daaa63689fc071617b04a58763c73ae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modals/modals.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharacterProfileDialogComponent } from './character-profile-dialog/character-profile-dialog.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialsModule } from '../materials/materials.module';\n\n\n\n@NgModule({\n  declarations: [\n    CharacterProfileDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    FlexLayoutModule\n  ]\n})\nexport class ModalsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CharacterProfileDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewsModule",
            "id": "module-ViewsModule-a41bbed6df315ab97bf2fb33e603d44b2ec76fa922a6ea27a6c5a27b96e67e77ea98f6f958f7d94b50472a14b1b588e56c60fd1c847b78f105a454b1c1d35a0d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/views/views.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialsModule } from '../materials/materials.module';\nimport { CharactersModule } from './characters/characters.module';\nimport { HomeComponent } from './home/home.component';\nimport { HelpComponent } from './help/help.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    HelpComponent,\n    PageNotFoundComponent,\n    TimelineComponent,\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    CharactersModule\n  ],\n  exports: [\n    HelpComponent,\n    PageNotFoundComponent,\n    TimelineComponent,\n    HomeComponent\n  ]\n})\nexport class ViewsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HelpComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "TimelineComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CharactersModule"
                        },
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HelpComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "TimelineComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "characterStateFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'characterState'"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "createCharacter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER,\n  props<{ character: Character }>()\n)"
            },
            {
                "name": "createCharacterFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "createCharacterSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
            },
            {
                "name": "deleteCharacter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER,\n  props<{ id: number }>()\n)"
            },
            {
                "name": "deleteCharacterFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "deleteCharacterSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CharacterState",
                "defaultValue": "{\n  characters: [],\n  character: {\n    id: 0,\n    characterName: '',\n    gender: '',\n    dateOfBirth: '',\n    dateOfDeath:'',\n    fatherId: 0,\n    motherId: 0,\n    father: {\n        id: 0,\n        name: '',\n        gender: 'M'\n    },\n    mother: {\n        id: 0,\n        name: '',\n        gender: 'F'\n    },\n    children: [],\n    fatherAgeAtBirth: null,\n    fatherContinuedToLive: null,\n    reference: '',\n    description: ''\n  },\n  mothers: [],\n  fathers: [],\n  characterTree: [],\n  error: undefined\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loadCharacter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER,\n  props<{ id: number }>()\n)"
            },
            {
                "name": "loadCharacterFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadCharacters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS\n)"
            },
            {
                "name": "loadCharactersFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadCharactersSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
            },
            {
                "name": "loadCharacterSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_SUCCESS,\n  props<{ character: Family }>()\n)"
            },
            {
                "name": "loadCharacterTree",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE,\n  props<{ characters: Character[] }>()\n)"
            },
            {
                "name": "loadCharacterTreeFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadCharacterTreeSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE_SUCCESS,\n  props<{ characterTree: Character[] }>()\n)"
            },
            {
                "name": "loadChildren",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN,\n  props<{ id: number }>()\n)"
            },
            {
                "name": "loadChildrenFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadChildrenSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN_SUCCESS,\n  props<{ children: Character[] }>()\n)"
            },
            {
                "name": "loadFatherList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST\n)"
            },
            {
                "name": "loadFatherListFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadFatherListSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST_SUCCESS,\n  props<{ characters: CharacterGenderList[] }>()\n)"
            },
            {
                "name": "loadMotherList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST\n)"
            },
            {
                "name": "loadMotherListFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadMotherListSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST_SUCCESS,\n  props<{ characters: CharacterGenderList[] }>()\n)"
            },
            {
                "name": "loadParent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT,\n  props<{ id: number }>()\n)"
            },
            {
                "name": "loadParentFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "loadParentSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT_SUCCESS,\n  props<{ parent: Parent }>()\n)"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production\r\n    ? []\r\n    : []"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production ? [] : []"
            },
            {
                "name": "myCharacters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/character.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Character[]",
                "defaultValue": "[\r\n  {\r\n      id: 1,\r\n      characterName: 'Adam',\r\n      gender: 'M',\r\n      dateOfBirth: '50',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 2,\r\n      characterName: 'Eve',\r\n      gender: 'F',\r\n      dateOfBirth: '100',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  },\r\n  {\r\n      id: 3,\r\n      characterName: 'Seth',\r\n      gender: 'M',\r\n      dateOfBirth: '2896',\r\n      dateOfDeath: '2984',\r\n      fatherId: 1,\r\n      motherId: 2,\r\n      children: [],\r\n      fatherAgeAtBirth: 105,\r\n      fatherContinuedToLive: 807,\r\n      reference: 'Gen 5:6-8',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 4,\r\n      characterName: 'E\\'nosh',\r\n      gender: 'M',\r\n      dateOfBirth: '3791',\r\n      dateOfDeath: '2976',\r\n      fatherId: 3,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 90,\r\n      fatherContinuedToLive: 815,\r\n      reference: 'Gen 5:9-11',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui.'\r\n  },\r\n  {\r\n      id: 5,\r\n      characterName: 'Ca-l\\nan',\r\n      gender: 'M',\r\n      dateOfBirth: '3701',\r\n      dateOfDeath: '2861',\r\n      fatherId: 4,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 70,\r\n      fatherContinuedToLive: 840,\r\n      reference: 'Gen 5:12-14',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 6,\r\n      characterName: 'Ma-ha\\'la-le-el',\r\n      gender: 'M',\r\n      dateOfBirth: '3631',\r\n      dateOfDeath: '2801',\r\n      fatherId: 5,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 830,\r\n      reference: 'Gen 5:15-17',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 7,\r\n      characterName: 'Ja\\'red',\r\n      gender: 'M',\r\n      dateOfBirth: '3566',\r\n      dateOfDeath: '2604',\r\n      fatherId: 6,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 162,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:18-20',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 8,\r\n      characterName: 'E\\'noch',\r\n      gender: 'M',\r\n      dateOfBirth: '3404',\r\n      dateOfDeath: '2039',\r\n      fatherId: 7,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 300,\r\n      reference: 'Gen 5:21-23',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  }\r\n]"
            },
            {
                "name": "NAVI",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Array<Navigation>",
                "defaultValue": "[\n  {\n    id: 1,\n    name: 'Home',\n    url: ['/'],\n    isActive: false\n  },\n  {\n    id: 2,\n    name: 'Timeline',\n    url: ['/time-line'],\n    isActive: false\n  },\n  {\n    id: 3,\n    name: 'Characters',\n    url: ['/characters'],\n    isActive: false\n  },\n  {\n    id: 4,\n    name: 'Help',\n    url: ['/help'],\n    isActive: false\n  }\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState>",
                "defaultValue": "{}"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(fromCharacterActions.loadCharacterSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: action.character\n    }\n  }),\n  on(fromCharacterActions.loadCharactersSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadCharactersFailure, (state, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadParentSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: {\n        ...state.character,\n        father: action.parent,\n        mother: action.parent\n      }\n    }\n\n  }),\n  on(fromCharacterActions.loadParentFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadMotherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      mothers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadMotherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadFatherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      fathers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadFatherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.createCharacterSuccess, (state: CharacterState, action) => {\n    console.log('createCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.createCharacterFailure, (state: CharacterState, action) => {\n    console.log('createCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.updateCharacterSuccess, (state: CharacterState, action) => {\n    console.log('updateCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.updateCharacterFailure, (state: CharacterState, action) => {\n    console.log('updateCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterSuccess, (state: CharacterState, action) => {\n    console.log('deleteCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterFailure, (state: CharacterState, action) => {\n    console.log('deleteCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characterTree: action.characterTree\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  })\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "routerMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    events: () => {},\r\n    navigate:  () => {}\r\n  }"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectCharacter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.character\r\n)"
            },
            {
                "name": "selectCharacterFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CharacterState>(\r\n  characterStateFeatureKey\r\n)"
            },
            {
                "name": "selectCharacters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.characters\r\n)"
            },
            {
                "name": "selectCharacterTree",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.characterTree\r\n)"
            },
            {
                "name": "selectFatherList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.fathers\r\n)"
            },
            {
                "name": "selectMotherList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.mothers\r\n)"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "updateCharacter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER,\n  props<{ character: Character }>()\n)"
            },
            {
                "name": "updateCharacterFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
            },
            {
                "name": "updateCharacterSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/characters/store/character.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "CharacterGenderList",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Omit<Character | \"gender\" | \"children\" | \"dateOfBirth\" | \"dateOfDeath\" | \"fatherId\" | \"motherId\" | \"fatherAgeAtBirth\" | \"fatherContinuedToLive\" | \"reference\" | \"description\">",
                "file": "src/app/models/character.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [
            {
                "name": "CharacterActionTypes",
                "childs": [
                    {
                        "name": "LOAD_CHARACTERS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character List Component] Load Characters"
                    },
                    {
                        "name": "LOAD_CHARACTERS_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Effect] Load Characters Success"
                    },
                    {
                        "name": "LOAD_CHARACTERS_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Effect] Load Characters Failure"
                    },
                    {
                        "name": "LOAD_CHARACTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character List Component] Load Character"
                    },
                    {
                        "name": "LOAD_CHARACTER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Effect] Load Character Success"
                    },
                    {
                        "name": "LOAD_CHARACTER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Effect] Load Character Failure"
                    },
                    {
                        "name": "LOAD_PARENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Parent] Load Parent"
                    },
                    {
                        "name": "LOAD_PARENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Parent] Load Parent Success"
                    },
                    {
                        "name": "LOAD_PARENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Parent] Load Parent Failure"
                    },
                    {
                        "name": "LOAD_CHILDREN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Children] Load Character Children"
                    },
                    {
                        "name": "LOAD_CHILDREN_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Children] Load Character Children Success"
                    },
                    {
                        "name": "LOAD_CHILDREN_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Children] Load Character Children Failure"
                    },
                    {
                        "name": "LOAD_MOTHER_LIST",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Mother List] Load Mother List"
                    },
                    {
                        "name": "LOAD_MOTHER_LIST_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Mother List] Load Mother List Success"
                    },
                    {
                        "name": "LOAD_MOTHER_LIST_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Mother List] Load Mother List Failure"
                    },
                    {
                        "name": "LOAD_FATHER_LIST",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Father List] Load Father List"
                    },
                    {
                        "name": "LOAD_FATHER_LIST_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Father List] Load Father List Success"
                    },
                    {
                        "name": "LOAD_FATHER_LIST_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Father List] Load Father List Failure"
                    },
                    {
                        "name": "LOAD_CHARACTER_TREE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Load Character Tree] Load Character Tree"
                    },
                    {
                        "name": "LOAD_CHARACTER_TREE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Load Character Tree] Load Character Tree Success"
                    },
                    {
                        "name": "LOAD_CHARACTER_TREE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Load Character Tree] Load Character Tree Failure"
                    },
                    {
                        "name": "CREATE_CHARACTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Create] Create Character"
                    },
                    {
                        "name": "CREATE_CHARACTER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Create Success] Create Character Success"
                    },
                    {
                        "name": "CREATE_CHARACTER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Create Failure] Create Character Failure"
                    },
                    {
                        "name": "UPDATE_CHARACTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Update] Update Character"
                    },
                    {
                        "name": "UPDATE_CHARACTER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Update Success] Update Character Success"
                    },
                    {
                        "name": "UPDATE_CHARACTER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Update Failure] Update Character Failure"
                    },
                    {
                        "name": "DELETE_CHARACTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Delete] Delete Character"
                    },
                    {
                        "name": "DELETE_CHARACTER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Delete Success] Delete Character Success"
                    },
                    {
                        "name": "DELETE_CHARACTER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Character Delete Failure] Delete Character Failure"
                    },
                    {
                        "name": "GET_SIBLINGS_PARENT_NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Sibling] Get Parent Name"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/views/characters/store/character.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/app/views/characters/store/index.ts": [
                {
                    "name": "characterStateFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'characterState'"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CharacterState",
                    "defaultValue": "{\n  characters: [],\n  character: {\n    id: 0,\n    characterName: '',\n    gender: '',\n    dateOfBirth: '',\n    dateOfDeath:'',\n    fatherId: 0,\n    motherId: 0,\n    father: {\n        id: 0,\n        name: '',\n        gender: 'M'\n    },\n    mother: {\n        id: 0,\n        name: '',\n        gender: 'F'\n    },\n    children: [],\n    fatherAgeAtBirth: null,\n    fatherContinuedToLive: null,\n    reference: '',\n    description: ''\n  },\n  mothers: [],\n  fathers: [],\n  characterTree: [],\n  error: undefined\n}"
                },
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production ? [] : []"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(fromCharacterActions.loadCharacterSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: action.character\n    }\n  }),\n  on(fromCharacterActions.loadCharactersSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadCharactersFailure, (state, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadParentSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      character: {\n        ...state.character,\n        father: action.parent,\n        mother: action.parent\n      }\n    }\n\n  }),\n  on(fromCharacterActions.loadParentFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadMotherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      mothers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadMotherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadFatherListSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      fathers: action.characters\n    }\n  }),\n  on(fromCharacterActions.loadFatherListFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.createCharacterSuccess, (state: CharacterState, action) => {\n    console.log('createCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.createCharacterFailure, (state: CharacterState, action) => {\n    console.log('createCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.updateCharacterSuccess, (state: CharacterState, action) => {\n    console.log('updateCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.updateCharacterFailure, (state: CharacterState, action) => {\n    console.log('updateCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterSuccess, (state: CharacterState, action) => {\n    console.log('deleteCharacterSuccess action.characters: ', action.characters);\n    return {\n      ...state,\n      characters: action.characters\n    }\n  }),\n  on(fromCharacterActions.deleteCharacterFailure, (state: CharacterState, action) => {\n    console.log('deleteCharacterFailure action.characters: ', action.error);\n    return {\n      ...state,\n      error: action.error\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeSuccess, (state: CharacterState, action) => {\n    return {\n      ...state,\n      characterTree: action.characterTree\n    }\n  }),\n  on(fromCharacterActions.loadCharacterTreeFailure, (state: CharacterState, action) => {\n    return {\n      ...state,\n      error: action.error\n    }\n  })\n)"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/views/characters/store/character.actions.ts": [
                {
                    "name": "createCharacter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER,\n  props<{ character: Character }>()\n)"
                },
                {
                    "name": "createCharacterFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "createCharacterSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.CREATE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
                },
                {
                    "name": "deleteCharacter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER,\n  props<{ id: number }>()\n)"
                },
                {
                    "name": "deleteCharacterFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "deleteCharacterSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.DELETE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
                },
                {
                    "name": "loadCharacter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER,\n  props<{ id: number }>()\n)"
                },
                {
                    "name": "loadCharacterFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadCharacters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS\n)"
                },
                {
                    "name": "loadCharactersFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadCharactersSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTERS_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
                },
                {
                    "name": "loadCharacterSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_SUCCESS,\n  props<{ character: Family }>()\n)"
                },
                {
                    "name": "loadCharacterTree",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE,\n  props<{ characters: Character[] }>()\n)"
                },
                {
                    "name": "loadCharacterTreeFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadCharacterTreeSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHARACTER_TREE_SUCCESS,\n  props<{ characterTree: Character[] }>()\n)"
                },
                {
                    "name": "loadChildren",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN,\n  props<{ id: number }>()\n)"
                },
                {
                    "name": "loadChildrenFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadChildrenSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_CHILDREN_SUCCESS,\n  props<{ children: Character[] }>()\n)"
                },
                {
                    "name": "loadFatherList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST\n)"
                },
                {
                    "name": "loadFatherListFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadFatherListSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_FATHER_LIST_SUCCESS,\n  props<{ characters: CharacterGenderList[] }>()\n)"
                },
                {
                    "name": "loadMotherList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST\n)"
                },
                {
                    "name": "loadMotherListFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadMotherListSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_MOTHER_LIST_SUCCESS,\n  props<{ characters: CharacterGenderList[] }>()\n)"
                },
                {
                    "name": "loadParent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT,\n  props<{ id: number }>()\n)"
                },
                {
                    "name": "loadParentFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "loadParentSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.LOAD_PARENT_SUCCESS,\n  props<{ parent: Parent }>()\n)"
                },
                {
                    "name": "updateCharacter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER,\n  props<{ character: Character }>()\n)"
                },
                {
                    "name": "updateCharacterFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER_FAILURE,\n  props<{ error: any }>()\n)"
                },
                {
                    "name": "updateCharacterSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  CharacterActionTypes.UPDATE_CHARACTER_SUCCESS,\n  props<{ characters: Character[] }>()\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/reducers/index.ts": [
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production\r\n    ? []\r\n    : []"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState>",
                    "defaultValue": "{}"
                }
            ],
            "src/app/services/character.service.ts": [
                {
                    "name": "myCharacters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/character.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "defaultValue": "[\r\n  {\r\n      id: 1,\r\n      characterName: 'Adam',\r\n      gender: 'M',\r\n      dateOfBirth: '50',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 2,\r\n      characterName: 'Eve',\r\n      gender: 'F',\r\n      dateOfBirth: '100',\r\n      dateOfDeath: '3096',\r\n      fatherId: 0,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 130,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:3-5',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  },\r\n  {\r\n      id: 3,\r\n      characterName: 'Seth',\r\n      gender: 'M',\r\n      dateOfBirth: '2896',\r\n      dateOfDeath: '2984',\r\n      fatherId: 1,\r\n      motherId: 2,\r\n      children: [],\r\n      fatherAgeAtBirth: 105,\r\n      fatherContinuedToLive: 807,\r\n      reference: 'Gen 5:6-8',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 4,\r\n      characterName: 'E\\'nosh',\r\n      gender: 'M',\r\n      dateOfBirth: '3791',\r\n      dateOfDeath: '2976',\r\n      fatherId: 3,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 90,\r\n      fatherContinuedToLive: 815,\r\n      reference: 'Gen 5:9-11',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui.'\r\n  },\r\n  {\r\n      id: 5,\r\n      characterName: 'Ca-l\\nan',\r\n      gender: 'M',\r\n      dateOfBirth: '3701',\r\n      dateOfDeath: '2861',\r\n      fatherId: 4,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 70,\r\n      fatherContinuedToLive: 840,\r\n      reference: 'Gen 5:12-14',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.'\r\n  },\r\n  {\r\n      id: 6,\r\n      characterName: 'Ma-ha\\'la-le-el',\r\n      gender: 'M',\r\n      dateOfBirth: '3631',\r\n      dateOfDeath: '2801',\r\n      fatherId: 5,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 830,\r\n      reference: 'Gen 5:15-17',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 7,\r\n      characterName: 'Ja\\'red',\r\n      gender: 'M',\r\n      dateOfBirth: '3566',\r\n      dateOfDeath: '2604',\r\n      fatherId: 6,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 162,\r\n      fatherContinuedToLive: 800,\r\n      reference: 'Gen 5:18-20',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus'\r\n  },\r\n  {\r\n      id: 8,\r\n      characterName: 'E\\'noch',\r\n      gender: 'M',\r\n      dateOfBirth: '3404',\r\n      dateOfDeath: '2039',\r\n      fatherId: 7,\r\n      motherId: 0,\r\n      children: [],\r\n      fatherAgeAtBirth: 65,\r\n      fatherContinuedToLive: 300,\r\n      reference: 'Gen 5:21-23',\r\n      description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis.'\r\n  }\r\n]"
                }
            ],
            "src/app/components/header/header.component.ts": [
                {
                    "name": "NAVI",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Navigation>",
                    "defaultValue": "[\n  {\n    id: 1,\n    name: 'Home',\n    url: ['/'],\n    isActive: false\n  },\n  {\n    id: 2,\n    name: 'Timeline',\n    url: ['/time-line'],\n    isActive: false\n  },\n  {\n    id: 3,\n    name: 'Characters',\n    url: ['/characters'],\n    isActive: false\n  },\n  {\n    id: 4,\n    name: 'Help',\n    url: ['/help'],\n    isActive: false\n  }\n]"
                }
            ],
            "src/app/components/header/header.component.stories.ts": [
                {
                    "name": "routerMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    events: () => {},\r\n    navigate:  () => {}\r\n  }"
                }
            ],
            "src/app/views/characters/store/character.selectors.ts": [
                {
                    "name": "selectCharacter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.character\r\n)"
                },
                {
                    "name": "selectCharacterFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CharacterState>(\r\n  characterStateFeatureKey\r\n)"
                },
                {
                    "name": "selectCharacters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.characters\r\n)"
                },
                {
                    "name": "selectCharacterTree",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.characterTree\r\n)"
                },
                {
                    "name": "selectFatherList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.fathers\r\n)"
                },
                {
                    "name": "selectMotherList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/characters/store/character.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCharacterFeature,\r\n  (state: CharacterState) => state.mothers\r\n)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/views/characters/store/character.actions.ts": [
                {
                    "name": "CharacterActionTypes",
                    "childs": [
                        {
                            "name": "LOAD_CHARACTERS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character List Component] Load Characters"
                        },
                        {
                            "name": "LOAD_CHARACTERS_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Effect] Load Characters Success"
                        },
                        {
                            "name": "LOAD_CHARACTERS_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Effect] Load Characters Failure"
                        },
                        {
                            "name": "LOAD_CHARACTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character List Component] Load Character"
                        },
                        {
                            "name": "LOAD_CHARACTER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Effect] Load Character Success"
                        },
                        {
                            "name": "LOAD_CHARACTER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Effect] Load Character Failure"
                        },
                        {
                            "name": "LOAD_PARENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Parent] Load Parent"
                        },
                        {
                            "name": "LOAD_PARENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Parent] Load Parent Success"
                        },
                        {
                            "name": "LOAD_PARENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Parent] Load Parent Failure"
                        },
                        {
                            "name": "LOAD_CHILDREN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Children] Load Character Children"
                        },
                        {
                            "name": "LOAD_CHILDREN_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Children] Load Character Children Success"
                        },
                        {
                            "name": "LOAD_CHILDREN_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Children] Load Character Children Failure"
                        },
                        {
                            "name": "LOAD_MOTHER_LIST",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Mother List] Load Mother List"
                        },
                        {
                            "name": "LOAD_MOTHER_LIST_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Mother List] Load Mother List Success"
                        },
                        {
                            "name": "LOAD_MOTHER_LIST_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Mother List] Load Mother List Failure"
                        },
                        {
                            "name": "LOAD_FATHER_LIST",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Father List] Load Father List"
                        },
                        {
                            "name": "LOAD_FATHER_LIST_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Father List] Load Father List Success"
                        },
                        {
                            "name": "LOAD_FATHER_LIST_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Father List] Load Father List Failure"
                        },
                        {
                            "name": "LOAD_CHARACTER_TREE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Load Character Tree] Load Character Tree"
                        },
                        {
                            "name": "LOAD_CHARACTER_TREE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Load Character Tree] Load Character Tree Success"
                        },
                        {
                            "name": "LOAD_CHARACTER_TREE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Load Character Tree] Load Character Tree Failure"
                        },
                        {
                            "name": "CREATE_CHARACTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Create] Create Character"
                        },
                        {
                            "name": "CREATE_CHARACTER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Create Success] Create Character Success"
                        },
                        {
                            "name": "CREATE_CHARACTER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Create Failure] Create Character Failure"
                        },
                        {
                            "name": "UPDATE_CHARACTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Update] Update Character"
                        },
                        {
                            "name": "UPDATE_CHARACTER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Update Success] Update Character Success"
                        },
                        {
                            "name": "UPDATE_CHARACTER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Update Failure] Update Character Failure"
                        },
                        {
                            "name": "DELETE_CHARACTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Delete] Delete Character"
                        },
                        {
                            "name": "DELETE_CHARACTER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Delete Success] Delete Character Success"
                        },
                        {
                            "name": "DELETE_CHARACTER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Character Delete Failure] Delete Character Failure"
                        },
                        {
                            "name": "GET_SIBLINGS_PARENT_NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Sibling] Get Parent Name"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/views/characters/store/character.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/models/character.model.ts": [
                {
                    "name": "CharacterGenderList",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Omit<Character | \"gender\" | \"children\" | \"dateOfBirth\" | \"dateOfDeath\" | \"fatherId\" | \"motherId\" | \"fatherAgeAtBirth\" | \"fatherContinuedToLive\" | \"reference\" | \"description\">",
                    "file": "src/app/models/character.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "characters",
                        "component": "CharacterListComponent",
                        "resolve": {
                            "characters": "CharactersResolver"
                        }
                    },
                    {
                        "path": "character-new",
                        "component": "CharacterNewComponent",
                        "resolve": {
                            "character": "CharacterResolver"
                        }
                    },
                    {
                        "path": "character-edit/:id",
                        "component": "CharacterEditComponent",
                        "resolve": {
                            "character": "CharacterResolver"
                        }
                    },
                    {
                        "path": "time-line",
                        "component": "TimelineComponent",
                        "resolve": {
                            "characters": "TimelineResolver"
                        }
                    },
                    {
                        "path": "help",
                        "component": "HelpComponent"
                    },
                    {
                        "path": "",
                        "component": "HomeComponent",
                        "resolve": {
                            "home": "HomeResolver"
                        }
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/character-form/character-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharacterFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/character-form/character-form.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GenderType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routerMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAVI",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/character-profile-dialog/character-profile-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharacterProfileDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/models/character.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Character",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/models/character.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Family",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/character.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Parent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/navigation.model..ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/resolvers/character.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "CharacterResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/resolvers/characters.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "CharactersResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/resolvers/home.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "HomeResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/resolvers/timeline.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TimelineResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/character.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CharacterService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/services/character.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myCharacters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/fake-electron.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Channel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/fake-electron.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/fake-electron.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FakeElectronService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/character-edit/character-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharacterEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/character-list/character-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharacterListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/character-new/character-new.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharacterNewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createCharacterFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createCharacterSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCharacterFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCharacterSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacterFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharactersFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharactersSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacterSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacterTree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacterTreeFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadCharacterTreeSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadChildren",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadChildrenFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadChildrenSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadFatherList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadFatherListFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadFatherListSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadMotherList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadMotherListFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadMotherListSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadParent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadParentFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadParentSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCharacterFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCharacterSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CharacterEffects",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCharacterFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCharacters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCharacterTree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFatherList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/character.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMotherList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CharacterState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "characterStateFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/characters/store/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/help/help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/timeline/timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}